.composition {
  position: relative;

  &-photo {
    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.4);
    outline-offset: 2rem; // space between an image and an outline (major difference between border and outline parameters)
    position: absolute;
    width: 55%;
    transition: all 0.2s;

    @include respond(tab-port) {
      box-shadow: 0 1.5rem 3rem rgba($color-black, 0.2);
      float: left;
      position: relative;
      width: 33.33%;
    }

    &-1 {
      left: 0;
      top: -2rem;

      @include respond(tab-port) {
        top: 0;
        transform: scale(1.2);
      }
    }

    &-2 {
      right: 0;
      top: 2rem;

      @include respond(tab-port) {
        top: -1rem;
        transform: scale(1.3);
        z-index: 100;
      }
    }

    &-3 {
      left: 20%;
      top: 10rem;

      @include respond(tab-port) {
        left: 0;
        top: 1rem;
        transform: scale(1.1);
      }
    }

    &:hover {
      @media only screen and (hover: hover) and (min-width: 56.3125em) {
        box-shadow: 0 2.5rem 4rem rgba($color-black, 0.5);
        outline: 1.5rem solid $color-medium-green; // kind of like a border, but you can set an offset parameter, to push it futher from an element itself
        transform: scale(1.05) translateY(-0.5rem);
        z-index: 10;
      }
    }
  }
  &:hover &-photo:not(:hover) {
    // useful trick to induce hover reaction on elements which have not been hovered on
    @media only screen and (hover: hover) and (min-width: 56.3125em) {
      transform: scale(0.95);
    }
  }
}
